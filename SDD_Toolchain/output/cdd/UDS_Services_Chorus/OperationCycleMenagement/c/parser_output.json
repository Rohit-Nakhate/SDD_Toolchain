[
    {
        "symbol": "ComponentDesign.markdown - ",
        "kind": "file",
        "brief": "",
        "meta": {
            "virtual": false,
            "const": false,
            "static": false,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "ComponentDesign.markdown",
                1
            ]
        },
        "trace": []
    },
    {
        "symbol": "DesignCoverage.markdown - ",
        "kind": "file",
        "brief": "",
        "meta": {
            "virtual": false,
            "const": false,
            "static": false,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "DesignCoverage.markdown",
                1
            ]
        },
        "trace": []
    },
    {
        "symbol": "ExportedDoorsSpecification_0_requirements.markdown - ",
        "kind": "file",
        "brief": "",
        "meta": {
            "virtual": false,
            "const": false,
            "static": false,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "ExportedDoorsSpecification_0_requirements.markdown",
                1
            ]
        },
        "trace": []
    },
    {
        "symbol": "AGINGCOUNTER_ERROR_VALUE - ",
        "kind": "define",
        "brief": "Aging counter error value.",
        "meta": {
            "virtual": false,
            "const": false,
            "static": false,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/src/OperationCycleMenagement.c",
                "78"
            ]
        },
        "trace": []
    },
    {
        "symbol": "AGINGCOUNTER_MAX_NORMAL_VALUE - ",
        "kind": "define",
        "brief": "The aging counter max normal value.",
        "meta": {
            "virtual": false,
            "const": false,
            "static": false,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/src/OperationCycleMenagement.c",
                "90"
            ]
        },
        "trace": []
    },
    {
        "symbol": "ZERO_VALUE - ",
        "kind": "define",
        "brief": "The zero value \n.",
        "meta": {
            "virtual": false,
            "const": false,
            "static": false,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/src/OperationCycleMenagement.c",
                "102"
            ]
        },
        "trace": []
    },
    {
        "symbol": "uint8 AgingCounter - ",
        "kind": "variable",
        "brief": "AgingCounter.",
        "detailed": "This variable holds the AgingCounter vaule.",
        "meta": {
            "virtual": false,
            "const": false,
            "static": false,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/src/OperationCycleMenagement.c",
                "125"
            ]
        },
        "trace": [],
        "return": {
            "type": "uint8",
            "desc": []
        }
    },
    {
        "symbol": "uint8 OBD_Driving_Cycle_InitiallySet - ",
        "kind": "variable",
        "brief": "OBD_Driving_Cycle_InitiallySet.",
        "detailed": "This variable holds the OBD_Driving_Cycle vaule.",
        "meta": {
            "virtual": false,
            "const": false,
            "static": false,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/src/OperationCycleMenagement.c",
                "142"
            ]
        },
        "trace": [],
        "return": {
            "type": "uint8",
            "desc": []
        }
    },
    {
        "symbol": "static Std_ReturnType DecrementAgingCounterForDTCs - (void)",
        "kind": "function",
        "brief": "DecrementAgingCounterForDTCs function decrements aging counter for DTCs.",
        "detailed": "This function decrements aging counter for DTCs stored in DEM. This action shall be done once in lifecycle.",
        "meta": {
            "virtual": false,
            "const": false,
            "static": true,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/src/OperationCycleMenagement.c",
                "192"
            ]
        },
        "return": {
            "type": "Std_ReturnType",
            "desc": [
                {
                    "param_name": "",
                    "param_desc": "Std_ReturnType E_OK"
                }
            ]
        },
        "params": {
            "def": [
                {
                    "param_decl": "",
                    "param_def": "",
                    "param_type": "void"
                }
            ],
            "desc": []
        },
        "globals": [
            {
                "additional_description": "NA"
            }
        ],
        "test": {
            "test_cases": [
                {
                    "test_name": "TEST_OperationCycleMenagement__DecrementAgingCounterForDTCs",
                    "has_valid_ref": true
                }
            ],
            "vc_info": [],
            "code_review": []
        },
        "security": [],
        "trace": [
            {
                "req_id": "SWR_ICAS1_Diag_832",
                "additional_description": "",
                "design_decision": false
            }
        ]
    },
    {
        "symbol": "static Std_ReturnType UpadateAgingCounterForDiagnose_01 - (void)",
        "kind": "function",
        "brief": "UpadateAgingCounterForDiagnose_01 increments aging counter.",
        "detailed": "This function incremets aging counter for CAN massege Diagnose_01. This action shall be done once in lifecycle. ",
        "meta": {
            "virtual": false,
            "const": false,
            "static": true,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/src/OperationCycleMenagement.c",
                "231"
            ]
        },
        "return": {
            "type": "Std_ReturnType",
            "desc": [
                {
                    "param_name": "",
                    "param_desc": "Std_ReturnType E_OK or Aging Counter result"
                }
            ]
        },
        "params": {
            "def": [
                {
                    "param_decl": "",
                    "param_def": "",
                    "param_type": "void"
                }
            ],
            "desc": [
                {
                    "param_name": "void",
                    "param_desc": "",
                    "param_range": null
                }
            ]
        },
        "globals": [
            {
                "additional_description": "AgingCounter: uint8 type, used in Diagnose_01 can message as agingcounter value"
            }
        ],
        "test": {
            "test_cases": [],
            "vc_info": [],
            "code_review": []
        },
        "security": [],
        "trace": [
            {
                "req_id": "SWR_ICAS1_Diag_898;",
                "additional_description": "",
                "design_decision": false
            }
        ]
    },
    {
        "symbol": "static boolean DrivingCycleValidation - (void)",
        "kind": "function",
        "brief": "DrivingCycleValidation validates driving cycle.",
        "detailed": "This function validates Driving cycle, is called after 2s of KL15 ON. ",
        "meta": {
            "virtual": false,
            "const": false,
            "static": true,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/src/OperationCycleMenagement.c",
                "272"
            ]
        },
        "return": {
            "type": "boolean",
            "desc": [
                {
                    "param_name": "",
                    "param_desc": "boolean return type, TRUE: when OBD_DrvingCycle_State changes to 1, FALSE: when OBD_DrvingCycle_State is 0"
                }
            ]
        },
        "params": {
            "def": [
                {
                    "param_decl": "",
                    "param_def": "",
                    "param_type": "void"
                }
            ],
            "desc": [
                {
                    "param_name": "void",
                    "param_desc": "",
                    "param_range": null
                }
            ]
        },
        "globals": [
            {
                "additional_description": "NA"
            }
        ],
        "test": {
            "test_cases": [
                {
                    "test_name": "TEST_OperationCycleMenagement__DrivingCycleValidation",
                    "has_valid_ref": true
                }
            ],
            "vc_info": [],
            "code_review": []
        },
        "security": [],
        "trace": [
            {
                "req_id": "SWR_ICAS1_Diag_827;",
                "additional_description": "",
                "design_decision": false
            }
        ]
    },
    {
        "symbol": "static boolean WarmUpCycleValidation - (void)",
        "kind": "function",
        "brief": "WarmUpCycleValidation function validates warm up cycle.",
        "detailed": "This function validates warm up cycle, is called after Driving Cycle has been confirmed.",
        "meta": {
            "virtual": false,
            "const": false,
            "static": true,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/src/OperationCycleMenagement.c",
                "313"
            ]
        },
        "return": {
            "type": "boolean",
            "desc": [
                {
                    "param_name": "",
                    "param_desc": "boolean return type, TRUE: when Warm_Up_Cycle is validated, FALSE: WUC is not validated"
                }
            ]
        },
        "params": {
            "def": [
                {
                    "param_decl": "",
                    "param_def": "",
                    "param_type": "void"
                }
            ],
            "desc": []
        },
        "globals": [
            {
                "additional_description": "NA"
            }
        ],
        "test": {
            "test_cases": [],
            "vc_info": [],
            "code_review": []
        },
        "security": [],
        "trace": [
            {
                "req_id": "SWR_ICAS1_Diag_833;",
                "additional_description": "",
                "design_decision": false
            }
        ]
    },
    {
        "symbol": "static void OperationCyclesRecognition - (void)",
        "kind": "function",
        "brief": "OperationCyclesRecognition function recognizes Driving Cycle and Warm Up Cycle.",
        "detailed": "This is function is called 2s after KL15 is on, recognizes Driving Cycle and Warm Up Cycle.",
        "meta": {
            "virtual": false,
            "const": false,
            "static": true,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/src/OperationCycleMenagement.c",
                "354"
            ]
        },
        "return": {
            "type": "void",
            "desc": [
                {
                    "param_name": "",
                    "param_desc": "void"
                }
            ]
        },
        "params": {
            "def": [
                {
                    "param_decl": "",
                    "param_def": "",
                    "param_type": "void"
                }
            ],
            "desc": []
        },
        "globals": [
            {
                "additional_description": "NA"
            }
        ],
        "test": {
            "test_cases": [
                {
                    "test_name": "TEST_OperationCycleMenagement__OperationCyclesRecognition",
                    "has_valid_ref": true
                }
            ],
            "vc_info": [],
            "code_review": []
        },
        "security": [],
        "trace": [
            {
                "req_id": "SWR_ICAS1_Diag_827;",
                "additional_description": "",
                "design_decision": false
            }
        ]
    },
    {
        "symbol": "static void OBD_DrivingCyclePreconditionsStateNvM - (void)",
        "kind": "function",
        "brief": "OBD_DrivingCyclePreconditionsStateNvM function checking diagnostic preconditions.",
        "detailed": "Function first check if OBD_Driving_Cycle_InitiallySet form NvM to check if is equal FALSE which mean that diagnostic preconditions should not be checked, after that periodically we checking if si_OBD_Driving_Cycle signal form Moto_54 will be set for the first time to '1'. In this case we change state value of variable OBD_Driving_Cycle_InitiallySet in NvM to TRUE, and diagnostic preconditions are checked always in this lifecycle.",
        "meta": {
            "virtual": false,
            "const": false,
            "static": true,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/src/OperationCycleMenagement.c",
                "400"
            ]
        },
        "return": {
            "type": "void",
            "desc": [
                {
                    "param_name": "",
                    "param_desc": "void"
                }
            ]
        },
        "params": {
            "def": [
                {
                    "param_decl": "",
                    "param_def": "",
                    "param_type": "void"
                }
            ],
            "desc": []
        },
        "globals": [
            {
                "additional_description": "OBD_Driving_Cycle_InitiallySet: boolean type, used to store the OBD_Driving_Cycle State value"
            }
        ],
        "test": {
            "test_cases": [
                {
                    "test_name": "TEST_OperationCycleMenagement__OBD_DrivingCyclePreconditionsStateNvM",
                    "has_valid_ref": true
                }
            ],
            "vc_info": [],
            "code_review": []
        },
        "security": [],
        "trace": [
            {
                "req_id": "SWR_ICAS1_Diag_886;",
                "additional_description": "",
                "design_decision": false
            }
        ]
    },
    {
        "symbol": "static void initAgingCounterForDiagnose_01 - (void)",
        "kind": "function",
        "brief": "InitAgingCounterForDiagnose_01.",
        "detailed": "This function is used to initialize Diagnose_01 signal. ",
        "meta": {
            "virtual": false,
            "const": false,
            "static": true,
            "inline": true,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/src/OperationCycleMenagement.c",
                "444"
            ]
        },
        "return": {
            "type": "void",
            "desc": [
                {
                    "param_name": "",
                    "param_desc": "void"
                }
            ]
        },
        "params": {
            "def": [
                {
                    "param_decl": "",
                    "param_def": "",
                    "param_type": "void"
                }
            ],
            "desc": [
                {
                    "param_name": "void",
                    "param_desc": "",
                    "param_range": null
                }
            ]
        },
        "globals": [
            {
                "additional_description": "AgingCounter: uint8 type, used in Diagnose_01 can message as agingcounter value"
            }
        ],
        "test": {
            "test_cases": [
                {
                    "test_name": "TEST_OperationCycleMenagement__initAgingCounterForDiagnose_01",
                    "has_valid_ref": true
                }
            ],
            "vc_info": [],
            "code_review": []
        },
        "security": [],
        "trace": [
            {
                "req_id": "SWR_ICAS1_Diag_369",
                "additional_description": "",
                "design_decision": false
            }
        ]
    },
    {
        "symbol": "void OperationCyclesMonitoring10ms - (void)",
        "kind": "function",
        "brief": "Triggers DEM to increment the AgingCycle for all DTCs which have Aging allowed.",
        "detailed": "The internal variables are initialized with the default values. cycle time is 10 ms. Aging Counter shall be decremented when after at least 2 s of KL15 on Driving Cycle and WARM UP cycle are recognized Aging Counter shall be decremented only once per ICAS operation cycle",
        "meta": {
            "virtual": false,
            "const": false,
            "static": false,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/src/OperationCycleMenagement.c",
                "624"
            ]
        },
        "return": {
            "type": "void",
            "desc": [
                {
                    "param_name": "",
                    "param_desc": "void"
                }
            ]
        },
        "params": {
            "def": [
                {
                    "param_decl": "",
                    "param_def": "",
                    "param_type": "void"
                }
            ],
            "desc": []
        },
        "globals": [
            {
                "additional_description": "OBD_Driving_Cycle_InitiallySet: boolean type, used to store the OBD_Driving_Cycle State value"
            }
        ],
        "test": {
            "test_cases": [
                {
                    "test_name": "TEST_OperationCycleMenagement__OperationCyclesMonitoring10ms",
                    "has_valid_ref": true
                }
            ],
            "vc_info": [],
            "code_review": []
        },
        "security": [],
        "trace": []
    },
    {
        "symbol": "boolean getDrivingCycleState - (void)",
        "kind": "function",
        "brief": "This function return velue of OBD_Driving_Cycle_InitiallySet stored in NvM.",
        "detailed": "Diagnostic preconditions should be checked and function will return TRUE ",
        "meta": {
            "virtual": false,
            "const": false,
            "static": false,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/src/OperationCycleMenagement.c",
                "667"
            ]
        },
        "return": {
            "type": "boolean",
            "desc": [
                {
                    "param_name": "",
                    "param_desc": "boolean type, return TRUE: TRUE in case of Driving Cycle set once FALSE: FALSE in case of Driving Cycle has not been set in this lifecycle"
                }
            ]
        },
        "params": {
            "def": [
                {
                    "param_decl": "",
                    "param_def": "",
                    "param_type": "void"
                }
            ],
            "desc": [
                {
                    "param_name": "void",
                    "param_desc": "",
                    "param_range": null
                }
            ]
        },
        "globals": [
            {
                "additional_description": "OBD_Driving_Cycle_InitiallySet: boolean type, used to store the OBD_Driving_Cycle State value"
            }
        ],
        "test": {
            "test_cases": [
                {
                    "test_name": "TEST_OperationCycleMenagement__getDrivingCycleState",
                    "has_valid_ref": true
                }
            ],
            "vc_info": [],
            "code_review": []
        },
        "security": [],
        "trace": []
    },
    {
        "symbol": "Std_ReturnType NVM_AgingCounter_SingleCbk - (NvM_ServiceIdType serv, NvM_RequestResultType request)",
        "kind": "function",
        "brief": "This function is called after NVM operation on Forget Counter block.",
        "detailed": "In this function, If request is not equal to E_OK, then it set aging counter to 0xFF.",
        "meta": {
            "virtual": false,
            "const": false,
            "static": false,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/src/OperationCycleMenagement.c",
                "679"
            ]
        },
        "return": {
            "type": "Std_ReturnType",
            "desc": [
                {
                    "param_name": "",
                    "param_desc": "Std_ReturnType, return E_OK"
                }
            ]
        },
        "params": {
            "def": [
                {
                    "param_decl": "serv",
                    "param_def": "",
                    "param_type": "NvM_ServiceIdType"
                },
                {
                    "param_decl": "request",
                    "param_def": "",
                    "param_type": "NvM_RequestResultType"
                }
            ],
            "desc": []
        },
        "globals": [
            {
                "additional_description": "AgingCounter: uint8 type, used in Diagnose_01 can message as agingcounter value"
            }
        ],
        "test": {
            "test_cases": [
                {
                    "test_name": "TEST_OperationCycleMenagement__NVM_AgingCounter_SingleCbk",
                    "has_valid_ref": true
                }
            ],
            "vc_info": [],
            "code_review": []
        },
        "security": [],
        "trace": []
    },
    {
        "symbol": "Std_ReturnType NVM_OBDDrivingCycleInitiallySet_SingleCbk - (NvM_ServiceIdType serv, NvM_RequestResultType request)",
        "kind": "function",
        "brief": "Function is called after NVM operation on OBD_Driving_Cycle_InitiallySet block.",
        "detailed": "In this function, If request is not equal to E_OK, then it set OBD_Driving_Cycle_Initiallyset to default.",
        "meta": {
            "virtual": false,
            "const": false,
            "static": false,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/src/OperationCycleMenagement.c",
                "701"
            ]
        },
        "return": {
            "type": "Std_ReturnType",
            "desc": [
                {
                    "param_name": "",
                    "param_desc": "Std_ReturnType, return E_OK"
                }
            ]
        },
        "params": {
            "def": [
                {
                    "param_decl": "serv",
                    "param_def": "",
                    "param_type": "NvM_ServiceIdType"
                },
                {
                    "param_decl": "request",
                    "param_def": "",
                    "param_type": "NvM_RequestResultType"
                }
            ],
            "desc": []
        },
        "globals": [
            {
                "additional_description": "OBD_Driving_Cycle_InitiallySet: boolean type, used to store the OBD_Driving_Cycle State value"
            }
        ],
        "test": {
            "test_cases": [
                {
                    "test_name": "TEST_OperationCycleMenagement__NVM_OBDDrivingCycleInitiallySet_SingleCbk",
                    "has_valid_ref": true
                }
            ],
            "vc_info": [],
            "code_review": []
        },
        "security": [],
        "trace": []
    },
    {
        "symbol": "OperationCycleMenagement.c - ",
        "kind": "file",
        "brief": "The OperationCycleMenagement module.",
        "meta": {
            "virtual": false,
            "const": false,
            "static": false,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/src/OperationCycleMenagement.c",
                1
            ]
        },
        "trace": []
    },
    {
        "symbol": "void TEST_OperationCycleMenagement__initAgingCounterForDiagnose_01 - (void)",
        "kind": "function",
        "brief": "",
        "detailed": null,
        "meta": {
            "virtual": false,
            "const": false,
            "static": false,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/test/swut/OperationCycleMenagement.c.test",
                "139"
            ]
        },
        "return": {
            "type": "void",
            "desc": []
        },
        "params": {
            "def": [
                {
                    "param_decl": "",
                    "param_def": "",
                    "param_type": "void"
                }
            ],
            "desc": []
        },
        "globals": [],
        "test": {
            "test_cases": [],
            "vc_info": [],
            "code_review": []
        },
        "security": [],
        "trace": []
    },
    {
        "symbol": "void TEST_OperationCycleMenagement__DrivingCycleValidation - (void)",
        "kind": "function",
        "brief": "",
        "detailed": null,
        "meta": {
            "virtual": false,
            "const": false,
            "static": false,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/test/swut/OperationCycleMenagement.c.test",
                "204"
            ]
        },
        "return": {
            "type": "void",
            "desc": []
        },
        "params": {
            "def": [
                {
                    "param_decl": "",
                    "param_def": "",
                    "param_type": "void"
                }
            ],
            "desc": []
        },
        "globals": [],
        "test": {
            "test_cases": [],
            "vc_info": [],
            "code_review": []
        },
        "security": [],
        "trace": []
    },
    {
        "symbol": "void TEST_OperationCycleMenagement__DecrementAgingCounterForDTCs - (void)",
        "kind": "function",
        "brief": "",
        "detailed": null,
        "meta": {
            "virtual": false,
            "const": false,
            "static": false,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/test/swut/OperationCycleMenagement.c.test",
                "272"
            ]
        },
        "return": {
            "type": "void",
            "desc": []
        },
        "params": {
            "def": [
                {
                    "param_decl": "",
                    "param_def": "",
                    "param_type": "void"
                }
            ],
            "desc": []
        },
        "globals": [],
        "test": {
            "test_cases": [],
            "vc_info": [],
            "code_review": []
        },
        "security": [],
        "trace": []
    },
    {
        "symbol": "void TEST_OperationCycleMenagement__getDrivingCycleState - (void)",
        "kind": "function",
        "brief": "",
        "detailed": null,
        "meta": {
            "virtual": false,
            "const": false,
            "static": false,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/test/swut/OperationCycleMenagement.c.test",
                "340"
            ]
        },
        "return": {
            "type": "void",
            "desc": []
        },
        "params": {
            "def": [
                {
                    "param_decl": "",
                    "param_def": "",
                    "param_type": "void"
                }
            ],
            "desc": []
        },
        "globals": [],
        "test": {
            "test_cases": [],
            "vc_info": [],
            "code_review": []
        },
        "security": [],
        "trace": []
    },
    {
        "symbol": "void TEST_OperationCycleMenagement__NVM_AgingCounter_SingleCbk - (void)",
        "kind": "function",
        "brief": "",
        "detailed": null,
        "meta": {
            "virtual": false,
            "const": false,
            "static": false,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/test/swut/OperationCycleMenagement.c.test",
                "387"
            ]
        },
        "return": {
            "type": "void",
            "desc": []
        },
        "params": {
            "def": [
                {
                    "param_decl": "",
                    "param_def": "",
                    "param_type": "void"
                }
            ],
            "desc": []
        },
        "globals": [],
        "test": {
            "test_cases": [],
            "vc_info": [],
            "code_review": []
        },
        "security": [],
        "trace": []
    },
    {
        "symbol": "void TEST_OperationCycleMenagement__NVM_OBDDrivingCycleInitiallySet_SingleCbk - (void)",
        "kind": "function",
        "brief": "",
        "detailed": null,
        "meta": {
            "virtual": false,
            "const": false,
            "static": false,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/test/swut/OperationCycleMenagement.c.test",
                "454"
            ]
        },
        "return": {
            "type": "void",
            "desc": []
        },
        "params": {
            "def": [
                {
                    "param_decl": "",
                    "param_def": "",
                    "param_type": "void"
                }
            ],
            "desc": []
        },
        "globals": [],
        "test": {
            "test_cases": [],
            "vc_info": [],
            "code_review": []
        },
        "security": [],
        "trace": []
    },
    {
        "symbol": "* void TEST_OperationCycleMenagement__OperationCyclesMonitoring10ms - (void)",
        "kind": "function",
        "brief": "",
        "detailed": null,
        "meta": {
            "virtual": false,
            "const": false,
            "static": false,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/test/swut/OperationCycleMenagement.c.test",
                "532"
            ]
        },
        "return": {
            "type": "*void",
            "desc": []
        },
        "params": {
            "def": [
                {
                    "param_decl": "",
                    "param_def": "",
                    "param_type": "void"
                }
            ],
            "desc": []
        },
        "globals": [],
        "test": {
            "test_cases": [],
            "vc_info": [],
            "code_review": []
        },
        "security": [],
        "trace": []
    },
    {
        "symbol": "* void TEST_OperationCycleMenagement__OperationCyclesRecognition - (void)",
        "kind": "function",
        "brief": "",
        "detailed": null,
        "meta": {
            "virtual": false,
            "const": false,
            "static": false,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/test/swut/OperationCycleMenagement.c.test",
                "628"
            ]
        },
        "return": {
            "type": "*void",
            "desc": []
        },
        "params": {
            "def": [
                {
                    "param_decl": "",
                    "param_def": "",
                    "param_type": "void"
                }
            ],
            "desc": []
        },
        "globals": [],
        "test": {
            "test_cases": [],
            "vc_info": [],
            "code_review": []
        },
        "security": [],
        "trace": []
    },
    {
        "symbol": "void TEST_OperationCycleMenagement__OBD_DrivingCyclePreconditionsStateNvM - (void)",
        "kind": "function",
        "brief": "",
        "detailed": null,
        "meta": {
            "virtual": false,
            "const": false,
            "static": false,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/test/swut/OperationCycleMenagement.c.test",
                "803"
            ]
        },
        "return": {
            "type": "void",
            "desc": []
        },
        "params": {
            "def": [
                {
                    "param_decl": "",
                    "param_def": "",
                    "param_type": "void"
                }
            ],
            "desc": []
        },
        "globals": [],
        "test": {
            "test_cases": [],
            "vc_info": [],
            "code_review": []
        },
        "security": [],
        "trace": []
    },
    {
        "symbol": "OperationCycleMenagement.c.test - ",
        "kind": "file",
        "brief": "The OperationCycleMenagement module.",
        "meta": {
            "virtual": false,
            "const": false,
            "static": false,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/test/swut/OperationCycleMenagement.c.test",
                1
            ]
        },
        "trace": []
    },
    {
        "symbol": "uint8 AgingCounter - ",
        "kind": "variable",
        "brief": "This variable holds the AgingCounter vaule.",
        "detailed": "AgingCounter: uint8 type, used in Diagnose_01 can message as agingcounter value. ",
        "meta": {
            "virtual": false,
            "const": false,
            "static": false,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/inc/OperationCycleMenagement.h",
                "79"
            ]
        },
        "trace": [],
        "return": {
            "type": "uint8",
            "desc": []
        }
    },
    {
        "symbol": "uint8 OBD_Driving_Cycle_InitiallySet - ",
        "kind": "variable",
        "brief": "This variable holds the OBD_Driving_Cycle vaule.",
        "detailed": "OBD_Driving_Cycle_InitiallySet: boolean type, used to store the OBD_Driving_Cycle State value ",
        "meta": {
            "virtual": false,
            "const": false,
            "static": false,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/inc/OperationCycleMenagement.h",
                "93"
            ]
        },
        "trace": [],
        "return": {
            "type": "uint8",
            "desc": []
        }
    },
    {
        "symbol": "Std_ReturnType NVM_AgingCounter_SingleCbk - (NvM_ServiceIdType serv, NvM_RequestResultType request)",
        "kind": "function",
        "brief": "This function is called after NVM operation on Forget Counter block.",
        "detailed": "In this function, If request is not equal to E_OK, then it set aging counter to 0xFF.",
        "meta": {
            "virtual": false,
            "const": false,
            "static": false,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/inc/OperationCycleMenagement.h",
                "135"
            ]
        },
        "return": {
            "type": "Std_ReturnType",
            "desc": [
                {
                    "param_name": "",
                    "param_desc": "Std_ReturnType, return E_OK"
                }
            ]
        },
        "params": {
            "def": [
                {
                    "param_decl": "serv",
                    "param_def": "",
                    "param_type": "NvM_ServiceIdType"
                },
                {
                    "param_decl": "request",
                    "param_def": "",
                    "param_type": "NvM_RequestResultType"
                }
            ],
            "desc": []
        },
        "globals": [
            {
                "additional_description": "AgingCounter: uint8 type, used in Diagnose_01 can message as agingcounter value"
            }
        ],
        "test": {
            "test_cases": [
                {
                    "test_name": "TEST_OperationCycleMenagement__NVM_AgingCounter_SingleCbk",
                    "has_valid_ref": true
                }
            ],
            "vc_info": [],
            "code_review": []
        },
        "security": [],
        "trace": []
    },
    {
        "symbol": "Std_ReturnType NVM_OBDDrivingCycleInitiallySet_SingleCbk - (NvM_ServiceIdType serv, NvM_RequestResultType request)",
        "kind": "function",
        "brief": "Function is called after NVM operation on OBD_Driving_Cycle_InitiallySet block.",
        "detailed": "In this function, If request is not equal to E_OK, then it set OBD_Driving_Cycle_Initiallyset to default.",
        "meta": {
            "virtual": false,
            "const": false,
            "static": false,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/inc/OperationCycleMenagement.h",
                "180"
            ]
        },
        "return": {
            "type": "Std_ReturnType",
            "desc": [
                {
                    "param_name": "",
                    "param_desc": "Std_ReturnType, return E_OK"
                }
            ]
        },
        "params": {
            "def": [
                {
                    "param_decl": "serv",
                    "param_def": "",
                    "param_type": "NvM_ServiceIdType"
                },
                {
                    "param_decl": "request",
                    "param_def": "",
                    "param_type": "NvM_RequestResultType"
                }
            ],
            "desc": []
        },
        "globals": [
            {
                "additional_description": "OBD_Driving_Cycle_InitiallySet: boolean type, used to store the OBD_Driving_Cycle State value"
            }
        ],
        "test": {
            "test_cases": [
                {
                    "test_name": "TEST_OperationCycleMenagement__NVM_OBDDrivingCycleInitiallySet_SingleCbk",
                    "has_valid_ref": true
                }
            ],
            "vc_info": [],
            "code_review": []
        },
        "security": [],
        "trace": []
    },
    {
        "symbol": "boolean getDrivingCycleState - (void)",
        "kind": "function",
        "brief": "This function return velue of OBD_Driving_Cycle_InitiallySet stored in NvM.",
        "detailed": "Diagnostic preconditions should be checked and function will return TRUE ",
        "meta": {
            "virtual": false,
            "const": false,
            "static": false,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/inc/OperationCycleMenagement.h",
                "224"
            ]
        },
        "return": {
            "type": "boolean",
            "desc": [
                {
                    "param_name": "",
                    "param_desc": "boolean type, return TRUE: TRUE in case of Driving Cycle set once FALSE: FALSE in case of Driving Cycle has not been set in this lifecycle"
                }
            ]
        },
        "params": {
            "def": [
                {
                    "param_decl": "",
                    "param_def": "",
                    "param_type": "void"
                }
            ],
            "desc": [
                {
                    "param_name": "void",
                    "param_desc": "",
                    "param_range": null
                }
            ]
        },
        "globals": [
            {
                "additional_description": "OBD_Driving_Cycle_InitiallySet: boolean type, used to store the OBD_Driving_Cycle State value"
            }
        ],
        "test": {
            "test_cases": [
                {
                    "test_name": "TEST_OperationCycleMenagement__getDrivingCycleState",
                    "has_valid_ref": true
                }
            ],
            "vc_info": [],
            "code_review": []
        },
        "security": [],
        "trace": []
    },
    {
        "symbol": "void OperationCyclesMonitoring10ms - (void)",
        "kind": "function",
        "brief": "Triggers DEM to increment the AgingCycle for all DTCs which have Aging allowed.",
        "detailed": "The internal variables are initialized with the default values. cycle time is 10 ms. Aging Counter shall be decremented when after at least 2 s of KL15 on Driving Cycle and WARM UP cycle are recognized Aging Counter shall be decremented only once per ICAS operation cycle",
        "meta": {
            "virtual": false,
            "const": false,
            "static": false,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/inc/OperationCycleMenagement.h",
                "270"
            ]
        },
        "return": {
            "type": "void",
            "desc": [
                {
                    "param_name": "",
                    "param_desc": "void"
                }
            ]
        },
        "params": {
            "def": [
                {
                    "param_decl": "",
                    "param_def": "",
                    "param_type": "void"
                }
            ],
            "desc": []
        },
        "globals": [
            {
                "additional_description": "OBD_Driving_Cycle_InitiallySet: boolean type, used to store the OBD_Driving_Cycle State value"
            }
        ],
        "test": {
            "test_cases": [
                {
                    "test_name": "TEST_OperationCycleMenagement__OperationCyclesMonitoring10ms",
                    "has_valid_ref": true
                }
            ],
            "vc_info": [],
            "code_review": []
        },
        "security": [],
        "trace": []
    },
    {
        "symbol": "OperationCycleMenagement.h - ",
        "kind": "file",
        "brief": "The OperationCycleMenagement module.",
        "meta": {
            "virtual": false,
            "const": false,
            "static": false,
            "inline": false,
            "explicit": false,
            "mutable": false,
            "location": [
                "D:/GitICAS/sw.sys.chorus_main_build/mc_sw/cdd/UDS_Services_Chorus/OperationCycleMenagement/c/inc/OperationCycleMenagement.h",
                1
            ]
        },
        "trace": []
    },
    {
        "meta": {
            "location": [
                "DocumentInformation - Markdown",
                0
            ]
        },
        "kind": "page",
        "trace": []
    },
    {
        "meta": {
            "location": [
                "TermsAndAbbreviations - Markdown",
                0
            ]
        },
        "kind": "page",
        "trace": []
    },
    {
        "meta": {
            "location": [
                "ComponentDescription - Markdown",
                0
            ]
        },
        "kind": "page",
        "trace": []
    },
    {
        "meta": {
            "location": [
                "ExternalInterfacesDependencies - Markdown",
                0
            ]
        },
        "kind": "page",
        "trace": []
    },
    {
        "meta": {
            "location": [
                "InternalComponentDesign - Markdown",
                0
            ]
        },
        "kind": "page",
        "trace": []
    },
    {
        "meta": {
            "location": [
                "Configuration - Markdown",
                0
            ]
        },
        "kind": "page",
        "trace": []
    },
    {
        "meta": {
            "location": [
                "FunctionalSafety - Markdown",
                0
            ]
        },
        "kind": "page",
        "trace": []
    },
    {
        "meta": {
            "location": [
                "ResourcesConsumptionObjectives - Markdown",
                0
            ]
        },
        "kind": "page",
        "trace": []
    },
    {
        "meta": {
            "location": [
                "RationalesandAlternatives - Markdown",
                0
            ]
        },
        "kind": "page",
        "trace": []
    },
    {
        "meta": {
            "location": [
                "VerificationCriteria - Markdown",
                0
            ]
        },
        "kind": "page",
        "trace": []
    },
    {
        "meta": {
            "location": [
                "Traceability - Markdown",
                0
            ]
        },
        "kind": "page",
        "trace": []
    },
    {
        "meta": {
            "location": [
                "md_DesignCoverage - Markdown",
                0
            ]
        },
        "kind": "page",
        "trace": []
    },
    {
        "meta": {
            "location": [
                "md_ExportedDoorsSpecification_0_requirements - Markdown",
                0
            ]
        },
        "kind": "page",
        "trace": []
    },
    {
        "meta": {
            "location": [
                "test - Markdown",
                0
            ]
        },
        "kind": "page",
        "trace": []
    },
    {
        "meta": {
            "location": [
                "satisfy - Markdown",
                0
            ]
        },
        "kind": "page",
        "trace": []
    },
    {
        "meta": {
            "location": [
                "index - Markdown",
                0
            ]
        },
        "kind": "page",
        "trace": []
    }
]